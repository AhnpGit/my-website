// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`grid gridColumn gives the the element a display of flex when flex is passed as the third argument 1`] = `
Array [
  "
    ",
  "margin-left:0;margin-right:32px;margin-bottom:32px;flex-grow:0;flex-shrink:0;flex-basis:calc((99.9% * 1/2) - (32px - 32px * 1/2));display:flex;",
  "
    ",
  "&:nth-child(2n) { 
        margin-left: auto;
        margin-right: 0;
      }",
  "
  ",
]
`;

exports[`grid gridColumn gives the the element a display of noflex when noflex is passed as the third argument 1`] = `
Array [
  "
    ",
  "margin-left:0;margin-right:32px;margin-bottom:32px;flex-grow:0;flex-shrink:0;flex-basis:calc((99.9% * 1/2) - (32px - 32px * 1/2));",
  "
    ",
  "&:nth-child(2n) { 
        margin-left: auto;
        margin-right: 0;
      }",
  "
  ",
]
`;

exports[`grid gridColumn sets a gutter when the default value is overwritten by the invocation of the function 1`] = `
Array [
  "
    ",
  "margin-left:0;margin-right:16px;margin-bottom:16px;flex-grow:0;flex-shrink:0;flex-basis:calc((99.9% * 1/4) - (16px - 16px * 1/4));",
  "
    ",
  "&:nth-child(4n) { 
        margin-left: auto;
        margin-right: 0;
      }",
  "
  ",
]
`;

exports[`grid gridColumn sets a width that is the same as the fraction passed as the first argument 1`] = `
Array [
  "
    ",
  "margin-left:0;margin-right:32px;margin-bottom:32px;flex-grow:0;flex-shrink:0;flex-basis:calc((99.9% * 1/3) - (32px - 32px * 1/3));",
  "
    ",
  "&:nth-child(3n) { 
        margin-left: auto;
        margin-right: 0;
      }",
  "
  ",
]
`;

exports[`grid gridWrapper by default returns a tagged template literal that sets default styling for a GridWrapper element 1`] = `
Array [
  "
      display: flex;
      flex-flow: ",
  "row wrap",
  ";
    ",
]
`;

exports[`grid gridWrapper sets a left and right padding when a pixel value is provided as a third argument 1`] = `
Array [
  "
      display: flex;
      flex-flow: ",
  "row wrap",
  ";
      padding-left: ",
  "32px",
  ";
      padding-right: ",
  "32px",
  ";
    ",
]
`;

exports[`grid gridWrapper sets the direction to column when column is passed as first argument 1`] = `
Array [
  "
      display: flex;
      flex-flow: ",
  "column wrap",
  ";
    ",
]
`;

exports[`grid gridWrapper turns of wrap when nowrap is passed as second argument 1`] = `
Array [
  "
      display: flex;
      flex-flow: ",
  "row nowrap",
  ";
    ",
]
`;
